function Memory.init 0
push constant 2048
pop static 0
push static 0
push constant 16384
push constant 2048
sub
call Memory.poke 2
pop temp 0
push static 0
push constant 1
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Memory.peek 1
push constant 0
pop local 0
push argument 0
push local 0
add
pop pointer 1
push that 0
return
function Memory.poke 1
push constant 0
pop local 0
push argument 0
push local 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 6
push argument 0
push constant 0
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5
call Sys.error 1
pop temp 0
label IF_FALSE0
push static 0
pop local 0
push constant 0
pop local 1
push argument 0
push constant 1
add
pop local 2
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Memory.peek 1
push constant 2
sub
pop local 3
push local 3
push constant 1
add
push local 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
pop local 1
goto IF_END2
label IF_FALSE2
push local 0
call Memory.peek 1
push local 1
call Memory.peek 1
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
pop local 1
label IF_FALSE3
label IF_END2
label IF_FALSE1
push local 0
push constant 1
add
call Memory.peek 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 6
call Sys.error 1
pop temp 0
label IF_FALSE4
push local 1
call Memory.peek 1
push local 2
sub
pop local 4
push local 1
push local 4
call Memory.poke 2
pop temp 0
push local 1
push local 4
add
push constant 1
add
pop local 5
push local 5
push constant 1
sub
push local 2
call Memory.poke 2
pop temp 0
push local 5
return
function Memory.deAlloc 2
push argument 0
push constant 1
sub
pop local 0
push local 0
push argument 0
push constant 1
sub
call Memory.peek 1
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
push constant 0
call Memory.poke 2
pop temp 0
push static 0
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push constant 1
add
call Memory.peek 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
push local 0
call Memory.poke 2
pop temp 0
push constant 0
return
